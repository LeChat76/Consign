class SignaturePad {
    constructor(canvas) {
        this.canvas = canvas;
        this.ctx = canvas.getContext('2d');
        this.drawing = false;

        canvas.addEventListener('mousedown', this.startDrawing.bind(this));
        canvas.addEventListener('mousemove', this.draw.bind(this));
        canvas.addEventListener('mouseup', this.stopDrawing.bind(this));
        canvas.addEventListener('mouseleave', this.stopDrawing.bind(this));
    }

    startDrawing(event) {
        this.drawing = true;
        this.ctx.beginPath();
        this.ctx.moveTo(event.offsetX, event.offsetY);
    }

    draw(event) {
        if (!this.drawing) return;
        this.ctx.lineTo(event.offsetX, event.offsetY);
        this.ctx.stroke();
    }

    stopDrawing() {
        this.drawing = false;
    }

    clear() {
        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);
    }
    
    
}
if (typeof SignaturePad.prototype.isEmpty === "undefined") {
    SignaturePad.prototype.isEmpty = function () {
        const canvas = this.ctx.canvas;
        return !canvas.toDataURL().replace(/data:image\/(png|jpg);base64,/, "").length;
    };
}

SignaturePad.prototype.toDataURL = function () {
    return this.canvas.toDataURL(); // Retourne l'image du canvas au format Base64
};

console.log("✅ signature_pad.min.js chargé !!!!!!!!!!!!!!!!!!!!!!!!!!!!!");